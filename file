ðŸ”  String-Based DSA Questions
ðŸ§  Easy
Reverse a string
Input: "hello" â†’ Output: "olleh"

Check if a string is a palindrome
Input: "madam" â†’ Output: true

Count vowels and consonants
Input: "hello" â†’ Output: { vowels: 2, consonants: 3 }

Find the first non-repeating character
Input: "swiss" â†’ Output: "w"

Check if two strings are anagrams
Input: "listen", "silent" â†’ Output: true

ðŸ§  Medium
Longest substring without repeating characters
Input: "abcabcbb" â†’ Output: "abc"

Group anagrams
Input: ["eat", "tea", "tan", "ate", "nat", "bat"] â†’ Output: [["eat", "tea", "ate"], ["tan", "nat"], ["bat"]]

String compression
Input: "aaabbc" â†’ Output: "a3b2c1"

Check if a string is a rotation of another
Input: "waterbottle", "erbottlewat" â†’ Output: true

Remove all duplicates from a string
Input: "banana" â†’ Output: "ban"

ðŸ”¢ Array-Based DSA Questions
ðŸ§  Easy
Find the maximum and minimum in an array

Reverse an array

Find the second largest number

Remove duplicates from a sorted/unsorted array

Sum of all elements in the array

ðŸ§  Medium
Find the missing number in a sequence
Input: [1, 2, 4, 5] â†’ Output: 3

Move all zeros to the end
Input: [0, 1, 0, 3, 12] â†’ Output: [1, 3, 12, 0, 0]

Find the longest increasing subarray

Kadaneâ€™s Algorithm (maximum subarray sum)

Two sum problem
Input: [2, 7, 11, 15], target = 9 â†’ Output: [0, 1]

ðŸ§  Advanced (Good for SDET coding rounds)
Subarray with given sum (Sliding Window)

Rotate an array by K steps

Check for balanced parentheses in a string

Implement strstr() (substring search)

Find common elements in three sorted arrays

ðŸ“Œ SDET-Specific Relevance:
âœ… Strong knowledge of array/string manipulation is essential for automation challenges

âœ… Many test data sets are string/array based

âœ… Common in API testing, log parsing, and input validation

